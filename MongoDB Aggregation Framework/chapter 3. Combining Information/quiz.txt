1. Which of the following statements is true about the $lookup stage?

a. The collection specified in from cannot be sharded (Y)
b. You can specify a collection in another database to from
c. Specifying an existing field name to as will overwrite the the existing field (Y)
d. $lookup matches between localField and foreignField with an equality match (Y)

2. Which of the following statements apply to $graphLookup operator?

a. $graphLookup provides MongoDB a transitive closure implementation (Y)
b. Provides MongoDB with graph or graph-like capabilities (Y)
c. $lookup and $graphLookup stages require the exact same fields in their specification.
d. $graphLookup depends on $lookup operator. Cannot be used without $lookup
e. $graphLookup is a new stage of the aggregation pipeline introduced in MongoDB 3.2

3. Which of the following statements is/are correct about $graphLookup?

a. connectToField will be used on recursive find operations (Y)
b. connectFromField value will be use to match connectToField in a recursive match (Y)
c. as determines a collection where $graphLookup will store the stage results
d. startWith indicates the index that should be use to execute the recursive match

4. Which of the following statements is/are correct about $graphLookup?

a. maxDepth only takes $long values (Y)
b. depthField determines a field, in the result document, which specifies the number of recursive lookup needed to reach that document
c. maxDepth allows to specify the number of recursive lookups
d. depthField determines a field, which contains the value number of documents matched by the recursive lookup (Y)

5. Consider the following statement:
	``$graphLookup`` is required to be the last element on the pipeline.
Which of the following is true about the statement?

a. This is incorrect. $graphLookup can be used in any position of the pipeline and acts in the same way as a regular $lookup. (Y)
b. This is correct because $graphLookup pipes out the results of recursive search into a collection, similar to $out stage.
c. This is correct because of the recursive nature of $graphLookup we want to save resources for last.
d. This is incorrect. graphLookup needs to be the first element of the pipeline, regardless of other stages needed to perform the desired query.



{ "_id" : 0, "airport" : "JFK", "connects" : [ "BOS", "ORD" ] }
{ "_id" : 1, "airport" : "BOS", "connects" : [ "JFK", "PWM" ] }
{ "_id" : 2, "airport" : "ORD", "connects" : [ "JFK" ] }
{ "_id" : 3, "airport" : "PWM", "connects" : [ "BOS", "LHR" ] }
{ "_id" : 4, "airport" : "LHR", "connects" : [ "PWM" ] }

{ "_id" : 1, "name" : "Dev", "nearestAirport" : "JFK" }
{ "_id" : 2, "name" : "Eliot", "nearestAirport" : "JFK" }
{ "_id" : 3, "name" : "Jeff", "nearestAirport" : "BOS" }

db.travelers.aggregate( [
   {
      $graphLookup: {
         from: "airports",
         startWith: "$nearestAirport",
         connectFromField: "connects",
         connectToField: "airport",
         maxDepth: 2,
         depthField: "numConnections",
         as: "destinations"
      }
   }
] )































